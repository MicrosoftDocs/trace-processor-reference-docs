<Type Name="ScheduledTaskContext" FullName="Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext">
  <TypeSignature Language="C#" Value="public struct ScheduledTaskContext" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ScheduledTaskContext extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext" />
  <TypeSignature Language="VB.NET" Value="Public Structure ScheduledTaskContext" />
  <TypeSignature Language="F#" Value="type ScheduledTaskContext = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Windows.EventTracing.ScheduledTasks</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the context for a consumer that processes correlated scheduled task data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScheduledTaskContext (Microsoft.Windows.EventTracing.EventContextState state, Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask data, System.Runtime.ExceptionServices.ExceptionDispatchInfo exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Windows.EventTracing.EventContextState state, valuetype Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask data, class System.Runtime.ExceptionServices.ExceptionDispatchInfo exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.#ctor(Microsoft.Windows.EventTracing.EventContextState,Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask,System.Runtime.ExceptionServices.ExceptionDispatchInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As EventContextState, data As ScheduledTask, exception As ExceptionDispatchInfo)" />
      <MemberSignature Language="F#" Value="new Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext : Microsoft.Windows.EventTracing.EventContextState * Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask * System.Runtime.ExceptionServices.ExceptionDispatchInfo -&gt; Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext" Usage="new Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext (state, data, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.ScheduledTasks</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.Windows.EventTracing.EventContextState" />
        <Parameter Name="data" Type="Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask" />
        <Parameter Name="exception" Type="System.Runtime.ExceptionServices.ExceptionDispatchInfo" />
      </Parameters>
      <Docs>
        <param name="state">The mutable state associated with this event context.</param>
        <param name="data">The data from the event that was parsed, if successful.</param>
        <param name="exception">The exception that occured attempting to parse the event, if any.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext" /> structure.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="scheduledTaskContext.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.ScheduledTasks</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels delivery of future data to the matching consumer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public bool Canceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Canceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Canceled As Boolean" />
      <MemberSignature Language="F#" Value="member this.Canceled : bool" Usage="Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Canceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.ScheduledTasks</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the consumer receiving this event context is cancelling delivery of future
            events.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask Data" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As ScheduledTask" />
      <MemberSignature Language="F#" Value="member this.Data : Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask" Usage="Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.ScheduledTasks</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTask</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data that was parsed and correlated, if successful.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Succeeded" /> is <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Runtime.ExceptionServices.ExceptionDispatchInfo Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.ExceptionServices.ExceptionDispatchInfo Exception" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As ExceptionDispatchInfo" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Runtime.ExceptionServices.ExceptionDispatchInfo" Usage="Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.ScheduledTasks</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ExceptionServices.ExceptionDispatchInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the exception that occured attempting to parse an event or correlate data, if any.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Succeeded">
      <MemberSignature Language="C#" Value="public bool Succeeded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Succeeded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Succeeded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Succeeded As Boolean" />
      <MemberSignature Language="F#" Value="member this.Succeeded : bool" Usage="Microsoft.Windows.EventTracing.ScheduledTasks.ScheduledTaskContext.Succeeded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.ScheduledTasks</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the event was successfully parsed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
