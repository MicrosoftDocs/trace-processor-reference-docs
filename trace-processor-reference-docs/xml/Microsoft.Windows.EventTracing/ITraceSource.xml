<Type Name="ITraceSource" FullName="Microsoft.Windows.EventTracing.ITraceSource">
  <TypeSignature Language="C#" Value="public interface ITraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITraceSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Windows.EventTracing.ITraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITraceSource" />
  <TypeSignature Language="F#" Value="type ITraceSource = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Windows.EventTracing.Processing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Defines a source of trace data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;object,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;object, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Windows.EventTracing.ITraceSource.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of Object, Object)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;obj, obj&gt;" Usage="Microsoft.Windows.EventTracing.ITraceSource.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.Processing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a central location for sharing state between components during trace processing.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public Microsoft.Windows.EventTracing.ITraceProcessorSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Windows.EventTracing.ITraceProcessorSettings Settings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Windows.EventTracing.ITraceSource.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As ITraceProcessorSettings" />
      <MemberSignature Language="F#" Value="member this.Settings : Microsoft.Windows.EventTracing.ITraceProcessorSettings" Usage="Microsoft.Windows.EventTracing.ITraceSource.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.Processing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Windows.EventTracing.ITraceProcessorSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public void Use (Microsoft.Windows.EventTracing.IEventConsumer consumer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Use(class Microsoft.Windows.EventTracing.IEventConsumer consumer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Windows.EventTracing.ITraceSource.Use(Microsoft.Windows.EventTracing.IEventConsumer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Use (consumer As IEventConsumer)" />
      <MemberSignature Language="F#" Value="abstract member Use : Microsoft.Windows.EventTracing.IEventConsumer -&gt; unit" Usage="iTraceSource.Use consumer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.Processing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumer" Type="Microsoft.Windows.EventTracing.IEventConsumer" />
      </Parameters>
      <Docs>
        <param name="consumer">The event consumer to register.</param>
        <summary>Registers a consumer to receive events when the trace is processed.</summary>
        <remarks>
          <para>
            Event consumers that do not need to receive events from all providers should inherit from
            <see cref="T:Microsoft.Windows.EventTracing.IFilteredEventConsumer" /> for better performance.
            </para>
          <para>
            Event consumers that need to run across two passes through the trace can inherit from
            <see cref="T:Microsoft.Windows.EventTracing.ITwoPassEventConsumer" /> (or the related <see cref="T:Microsoft.Windows.EventTracing.IFilteredTwoPassEventConsumer" /> and/or
            <see cref="T:Microsoft.Windows.EventTracing.ICompletableTwoPassEventConsumer" />).
            </para>
          <para>
            Event consumers that need to run in a specific pass can inherit from <see cref="T:Microsoft.Windows.EventTracing.IScheduledConsumer" />.
            </para>
          <para>
            This part of the API is in preview and under active development. It may change in future releases.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCompletion">
      <MemberSignature Language="C#" Value="public void UseCompletion (Microsoft.Windows.EventTracing.ICompletable completable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseCompletion(class Microsoft.Windows.EventTracing.ICompletable completable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Windows.EventTracing.ITraceSource.UseCompletion(Microsoft.Windows.EventTracing.ICompletable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UseCompletion (completable As ICompletable)" />
      <MemberSignature Language="F#" Value="abstract member UseCompletion : Microsoft.Windows.EventTracing.ICompletable -&gt; unit" Usage="iTraceSource.UseCompletion completable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.Processing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completable" Type="Microsoft.Windows.EventTracing.ICompletable" />
      </Parameters>
      <Docs>
        <param name="completable">The callback to register.</param>
        <summary>Registers a callback to notify when trace processing is complete.</summary>
        <remarks>
          <para>
            Callbacks that need to receive a signal from the completion of a specific pass can inherit from
            <see cref="T:Microsoft.Windows.EventTracing.IScheduledConsumer" />.
            </para>
          <para>
            This part of the API is in preview and under active development. It may change in future releases.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
