<Type Name="IFilteredTwoPassEventConsumer" FullName="Microsoft.Windows.EventTracing.IFilteredTwoPassEventConsumer">
  <TypeSignature Language="C#" Value="public interface IFilteredTwoPassEventConsumer : Microsoft.Windows.EventTracing.IFilteredEventConsumer, Microsoft.Windows.EventTracing.ITwoPassEventConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFilteredTwoPassEventConsumer implements class Microsoft.Windows.EventTracing.IEventConsumer, class Microsoft.Windows.EventTracing.IFilteredEventConsumer, class Microsoft.Windows.EventTracing.ITwoPassEventConsumer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Windows.EventTracing.IFilteredTwoPassEventConsumer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFilteredTwoPassEventConsumer&#xA;Implements IFilteredEventConsumer, ITwoPassEventConsumer" />
  <TypeSignature Language="F#" Value="type IFilteredTwoPassEventConsumer = interface&#xA;    interface IFilteredEventConsumer&#xA;    interface IEventConsumer&#xA;    interface ITwoPassEventConsumer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Windows.EventTracing.Processing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Windows.EventTracing.IEventConsumer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Windows.EventTracing.IFilteredEventConsumer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Windows.EventTracing.ITwoPassEventConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Defines an <see cref="T:Microsoft.Windows.EventTracing.ITwoPassEventConsumer" /> that only listens to events from specific providers.
            </summary>
    <remarks>
            This part of the API is in preview and under active development. It may change in future releases.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="PreparatoryPassProviderIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Guid&gt; PreparatoryPassProviderIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype System.Guid&gt; PreparatoryPassProviderIds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Windows.EventTracing.IFilteredTwoPassEventConsumer.PreparatoryPassProviderIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreparatoryPassProviderIds As IReadOnlyList(Of Guid)" />
      <MemberSignature Language="F#" Value="member this.PreparatoryPassProviderIds : System.Collections.Generic.IReadOnlyList&lt;Guid&gt;" Usage="Microsoft.Windows.EventTracing.IFilteredTwoPassEventConsumer.PreparatoryPassProviderIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.Processing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of provider IDs for the events that this consumer will receive during the preparatory pass
            through the trace.
            </summary>
        <value>To be added.</value>
        <remarks>
            During the preparatory pass, the event consumer may determine which provider IDs to listen to during the
            main pass. The list of <see cref="P:Microsoft.Windows.EventTracing.IFilteredEventConsumer.ProviderIds" /> will not be accesed until after the
            preparatory pass has completed.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
