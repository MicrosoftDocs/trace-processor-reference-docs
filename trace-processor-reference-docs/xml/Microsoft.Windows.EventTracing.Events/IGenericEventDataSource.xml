<Type Name="IGenericEventDataSource" FullName="Microsoft.Windows.EventTracing.Events.IGenericEventDataSource">
  <TypeSignature Language="C#" Value="public interface IGenericEventDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGenericEventDataSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Windows.EventTracing.Events.IGenericEventDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGenericEventDataSource" />
  <TypeSignature Language="F#" Value="type IGenericEventDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Windows.EventTracing.Events</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.Windows.EventTracing.Events.IGenericEvent&gt; Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Windows.EventTracing.Events.IGenericEvent&gt; Events" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Windows.EventTracing.Events.IGenericEventDataSource.Events" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Events As IReadOnlyList(Of IGenericEvent)" />
      <MemberSignature Language="F#" Value="member this.Events : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Windows.EventTracing.Events.IGenericEvent&gt;" Usage="Microsoft.Windows.EventTracing.Events.IGenericEventDataSource.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.Events</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Windows.EventTracing.Events.IGenericEvent&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public Microsoft.Windows.EventTracing.Events.IGenericEventMap GetMap (Guid providerId, string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Windows.EventTracing.Events.IGenericEventMap GetMap(valuetype System.Guid providerId, string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Windows.EventTracing.Events.IGenericEventDataSource.GetMap(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMap (providerId As Guid, mapName As String) As IGenericEventMap" />
      <MemberSignature Language="F#" Value="abstract member GetMap : Guid * string -&gt; Microsoft.Windows.EventTracing.Events.IGenericEventMap" Usage="iGenericEventDataSource.GetMap (providerId, mapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Windows.EventTracing.Events</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Windows.EventTracing.Events.IGenericEventMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerId" Type="System.Guid" />
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">To be added.</param>
        <param name="mapName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
