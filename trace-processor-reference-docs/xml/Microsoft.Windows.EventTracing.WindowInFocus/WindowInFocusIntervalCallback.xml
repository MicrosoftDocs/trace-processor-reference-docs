<Type Name="WindowInFocusIntervalCallback" FullName="Microsoft.Windows.EventTracing.WindowInFocus.WindowInFocusIntervalCallback">
  <TypeSignature Language="C#" Value="public delegate void WindowInFocusIntervalCallback(WindowInFocusIntervalContext context);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WindowInFocusIntervalCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Windows.EventTracing.WindowInFocus.WindowInFocusIntervalCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WindowInFocusIntervalCallback(context As WindowInFocusIntervalContext)" />
  <TypeSignature Language="F#" Value="type WindowInFocusIntervalCallback = delegate of WindowInFocusIntervalContext -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Windows.EventTracing.WindowInFocus</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="Microsoft.Windows.EventTracing.WindowInFocus.WindowInFocusIntervalContext" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context">The window-in-focus data to process.</param>
    <summary>Processes window-in-focus data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
